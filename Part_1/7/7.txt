➜  7 git:(main) ✗ docker build . -t web-server
[+] Building 0.1s (6/6) FINISHED                                                                                      
 => [internal] load build definition from Dockerfile                                                             0.0s
 => => transferring dockerfile: 121B                                                                             0.0s
 => [internal] load .dockerignore                                                                                0.0s
 => => transferring context: 2B                                                                                  0.0s
 => [internal] load metadata for docker.io/devopsdockeruh/simple-web-service:alpine                              0.0s
 => [1/2] FROM docker.io/devopsdockeruh/simple-web-service:alpine                                                0.0s
 => CACHED [2/2] WORKDIR /usr/src/app                                                                            0.0s
 => exporting to image                                                                                          0.0s
 => => exporting layers                                                                                          0.0s
 => => writing image sha256:bbd5e271ca68172bcf099cb52096bb65edb41e1064c9ddd49090a4cfb1ca528e                     0.0s
 => => naming to docker.io/library/web-server                                                                    0.0s

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them


➜  7 git:(main) ✗ docker run web-server       
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /*path                    --> server.Start.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on :8080 
